using System;

public class WeatherForecast
{
    private int temperature;
    private string conditions;

    public WeatherForecast(int temperature, string conditions)
    {
        SetTemperature(temperature);
        this.conditions = conditions; 
    }

    public void SetTemperature(int temp)
    {
        if (temp > 15)
        {
            throw new ArgumentOutOfRangeException(nameof(temp), "Temperature is too high for the winter season");
        }
        temperature = temp; // Set the temperature if it's within the valid range
    }
    public string GetForecast()
    {
        return $"Temperature: {temperature}Â°C, Weather conditions: {conditions}";
    }

    public void DeleteForecast()
    {
        temperature = 0;
        conditions = ""; 
        Console.WriteLine("The forecast has been deleted.");
    }
}

class Program
{
    static void Main()
    {
        WeatherForecast forecast = null;

        try
        {
            forecast = new WeatherForecast(-5, "snow");
            Console.WriteLine(forecast.GetForecast());

            forecast.SetTemperature(20);
        }
        catch (ArgumentOutOfRangeException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }

        try
        {
            while (true)
            {
                Console.WriteLine("\nChoose an option:");
                Console.WriteLine("1. Create a new forecast");
                Console.WriteLine("2. Delete the forecast");

                int choice = int.Parse(Console.ReadLine());

                if (choice == 1)
                {
                    Console.WriteLine("Enter temperature:");
                    int userTemperature = int.Parse(Console.ReadLine());
                    Console.WriteLine("Enter weather conditions:");
                    string userConditions = Console.ReadLine(); 

                    forecast = new WeatherForecast(userTemperature, userConditions);
                    Console.WriteLine(forecast.GetForecast());
                }
                else if (choice == 2)
                {
                    if (forecast != null)
                    {
                        forecast.DeleteForecast();  
                        forecast = null; 
                    }
                    else
                    {
                        Console.WriteLine("No forecast to delete.");
                    }
                }
                else
                {
                    Console.WriteLine("Invalid option, please try again.");
                }
            }
        }
        catch (ArgumentOutOfRangeException ex)
        {
            Console.WriteLine($"Error: {ex.Message}");  
        }
        catch (FormatException)
        {
            Console.WriteLine("Error: Invalid input format.");  
        }
    }
}
